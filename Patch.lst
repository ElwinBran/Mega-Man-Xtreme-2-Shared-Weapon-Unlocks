LOC    OBJ              LINE   SOURCE
                        1      ; ROM bank 5 is first, contains gameplay checks
                        2      ; Bypass regular weapon change and redirect to patch code
014056 C3AC7F           3      ; JP $7FAC
014059 00               4      ; NOP
------
                        5      ; Another routine for X changing weapons
01667F C3CA7F           6      ; JP $7FCA
------
                        7      ; Replacing all Zero weapon flag checks with patch subroutine
                        8      ; Load the weapon to check into register b
017AEF 0600             9      ; LD B, 0x00
017AF1 CDE67F           10     ; CALL $7FE6
------
017B10 0603             11     ; LD B, 0x03
017B12 CDE67F           12     ; CALL $7FE6
------
017B48 0601             13     ; LD B, 0x01
017B4A CDE67F           14     ; CALL $7FE6
------
017B80 0607             15     ; LD B, 0x07
017B82 CDE67F           14     ; CALL $7FE6
                        16     ; the 0x7B obj already originally appears, but is still included for sanity
------
017B9E 0606             18     ; LD B, 0x06
017BA0 CDE67F           19     ; CALL $7FE6
------
017BC2 0605             20     ; LD B, 0x05
017BC4 CDE67F           21     ; CALL $7FE6
------
017BE6 0602             22     ; LD B, 0x02
017BE8 CDE67F           23     ; CALL $7FE6
------
017C16 0604             24     ; LD B, 0x04
017C18 CDE67F           25     ; CALL $7FE6
------
                        26     ; X routine for weapon swapping
                        27     ; HL contains a weapon offset, check the flag
017FAC CB76             28     ; BIT 6, (HL)
017FAE C26140           29     ; JP NZ, $4061
                        30     ; Zero's flags and weapons work different, skip testing if index is lower than 2
017FB1 D602             31     ; SUB 0x02
017FB3 DA5A40           32     ; JP C, $405A
                        33     ; Increase the index extra, to set up a decrement loop for bit shifting
017FB6 3C               34     ; INC A
                        35     ; Start with 0b00000001 to shift left towards correct flag 
017FB7 0601             36     ; LD B, 0x01
                        37     ; Start of the shift loop
017FB9 3D               38     ; DEC A
017FBA 2804             39     ; JR Z, +#4
017FBC CB20             40     ; SLA B
017FBE 18F9             41     ; JR -#7
                        42     ; B is now the exact bit of the Zero weapon flag we want to test
017FC0 FAA0C0           43     ; LD A, ($C0A0)
017FC3 A0               44     ; AND B
017FC4 C26140           45     ; JP NZ, $4061
017FC7 C35A40           46     ; JP $405A
                        47     ; Almost same as previous routine, also for X.
017FCA C28266           48     ; JP NZ, $6682
017FCD D602             49     ; SUB 0x02
017FCF DA1767           50     ; JP C, $6717
017FD2 3C               51     ; INC A
017FD3 0601             52     ; LD B, 0x01
017FD5 3D               53     ; DEC A
017FD6 2804             54     ; JR Z, +#4
017FD8 CB20             55     ; SLA B
017FDA 18F9             56     ; JR -#7
017FDC FAA0C0           57     ; LD A, ($C0A0)
017FDF A0               58     ; AND B
017FE0 C28266           59     ; JP NZ, $6682
017FE3 C31767           60     ; JP $6717
------
                        61     ; Subroutine for checking weapons as Zero
017FE6 48               62     ; LD C, B
                        63     ; Same shift loop as previous routines, but changed by using b as index
017FE7 04               64     ; INC B
017FE8 3E01             65     ; LD A, 0x01
017FEA 05               66     ; DEC B
017FEB 2804             67     ; JR Z, +#4
017FED CB27             68     ; SLA A
017FEF 18F9             69     ; JR -#7
                        70     ; Check the bitmask against Zero's weapon flags
017FF1 47               71     ; LD B, A
017FF2 FAA0C0           72     ; LD A, ($C0A0)
017FF5 A0               73     ; AND B
017FF6 C0               74     ; RET NZ
                        75     ; Now check X weapon flags if Zero's didn't pass the check
017FF7 0600             76     ; LD B, 0x00
                        77     ; register bc now contains the 16 bit index. Instead of 0xC06D, we offset two up
017FF9 216FC0           78     ; LD HL, 0xC06F
017FFC 09               79     ; ADD HL, BC
017FFD CB76             80     ; BIT 6, (HL)
017FFF C9               81     ; RET
========
                        82     ; ROM F manages a few graphics related things
                        83     ; First replacing a generic check for Zero's weapon flags with patch subroutine.
03EF20 CDC77F           84     ; CALL $7FC7
------
                        82     ; New patch routine for Zero check
                        83     ; No loop for ease of maintainance
03FFBD FAA0C0           84     ; LD A, ($C0A0)
03FFC0 A7               85     ; AND A
03FFC1 C0               86     ; RET NZ
03FFC2 FA6DC0           87     ; LD A, ($C06D)
                        88     ; Test gotten flag for all X weapons
03FFC5 CB77             89     ; BIT 6, A 
03FFC7 C0               90     ; RET NZ
03FFC8 FA6EC0           91     ; LD A, ($C06E)
03FFCB CB77             92     ; BIT 6, A 
03FFCD C0               93     ; RET NZ
03FFCE FA6FC0           94     ; LD A, ($C06F)
03FFD1 CB77             95     ; BIT 6, A 
03FFD3 C0               96     ; RET NZ
03FFD4 FA70C0           97     ; LD A, ($C070)
03FFD7 CB77             98     ; BIT 6, A 
03FFD9 C0               99     ; RET NZ
03FFDA FA71C0           100    ; LD A, ($C071)
03FFDD CB77             101    ; BIT 6, A 
03FFDF C0               102    ; RET NZ
03FFE0 FA72C0           103    ; LD A, ($C072)
03FFE3 CB77             104    ; BIT 6, A 
03FFE5 C0               105    ; RET NZ
03FFE6 FA73C0           106    ; LD A, ($C073)
03FFE9 CB77             107    ; BIT 6, A 
03FFEB C0               108    ; RET NZ
03FFEC FA74C0           109    ; LD A, ($C074)
03FFEF CB77             110    ; BIT 6, A 
03FFF1 C0               111    ; RET NZ
03FFF2 FA75C0           112    ; LD A, ($C075)
03FFF5 CB77             113    ; BIT 6, A 
03FFF7 C0               114    ; RET NZ
03FFF8 FA76C0           115    ; LD A, ($C076)
03FFFB CB77             116    ; BIT 6, A 
03FFFD C0               117    ; RET NZ
03FFFE AF               118    ; XOR A
03FFFF C9               119    ; RET
=======
                        120    ; ROM 1D, completely changing original code
                        121    ; First X's menu code
                        122    ; Loop over all weapons and test whether the menu should render them
07506D 2179CA           123    ; LD HL, 0xCA79
075070 3601             124    ; LD (HL), 0x01
075072 0601             125    ; LD B, 0x01
075074 0E01             126    ; LD C, 0x01
075076 116DC0           127    ; LD DE, 0xC06D
075079 13               128    ; INC DE
07507A 217ACA           129    ; LD HL, 0xCA7A
07507D 3600             129    ; LD (LH), 0x00
07507F 1A               130    ; LD A, (DE)
075080 E640             131    ; AND 0x40
                        132    ; Flag found, go to 'graphics call' to ensure weapon icon is drawn in menu
075082 C2EA7F           133    ; JP NZ, $7FEA
075085 3E01             134    ; LD A, 0x01
075087 B8               135    ; CP B
                        136    ; Skip Zero flag checking (because there are more X than Zero flags)
075088 CAC17F           137    ; JP, Z $7FC1
07508B FAA0C0           138    ; LD A, $C0A0
07508E A1               139    ; AND C
                        140    ; The code continues in free space.
07508F C3BF7F           141    ; JP $7FBF
------
                        142    ; Then replacing original Zero code, follows the same pattern as X
07511C D5               143    ; PUSH DE
07511D 0602             144    ; LD B, 0x02
07511F 0E01             145    ; LD C, 0x01
075121 116FC0           146    ; LD DE, $C06F
075124 217BCA           147    ; LD HL, CA7B
075127 3600             148    ; LD (HL), 0x00
075129 1A               149    ; LD A, (DE)
07512A E640             150    ; AND 0x40
07512C C2F57F           151    ; JP NZ, $7FF5
07512F FAA0C0           152    ; LD A, ($C0A0)
075132 A1               153    ; AND C
075133 C2F57F           154    ; JP NZ, $7FF5
                        155    ; Free space jump
075136 C3D87F           156    ; JP $7FD8 
                        157    ; Padding
075139 00               158    ; NOP
------
                        159    ; X routine continuation
                        160    ; Flag check still loaded, go to graphics call if set.
077FBF 2029             161    ; JR NZ, +#41
077FC1 23               162    ; INC HL
077FC2 13               163    ; INC DE
077FC3 3E01             164    ; LD A, 0x01
077FC5 B8               165    ; CP B
077FC6 2802             166    ; JR Z, +#2
077FC8 CB21             167    ; SLA C
077FCA 04               168    ; INC B
077FCB 78               169    ; LD A, B
077FCC FE0A             170    ; CP 0x0A
077FCE C8               171    ; RET Z
                        172    ; Loop if not all weapons are checked yet.
077FCF C37D50           173    ; JP $507D
------
                        174    ; Zero routine continuation
077FD8 23               175    ; INC HL
077FD9 13               176    ; INC DE
077FDA CB21             177    ; SLA C
077FDC 04               178    ; INC B
077FDD 78               179    ; LD A, B
077FDE FE0A             180    ; CP 0x0A
077FE0 C22751           181    ; JP NZ, $5127
077FE3 D1               182    ; POP DE
077FE4 C9               183    ; RET
------
                        184    ; X 'graphics call'
                        184    ; turned into seperate subroutine because of duplicate usage.
077FEA E5               185    ; PUSH HL
077FEB D5               186    ; PUSH DE
077FEC C5               187    ; PUSH BC
077FED CD9250           188    ; CALL $5092
077FF0 C1               189    ; POP  BC
077FF1 D1               190    ; POP  DE
077FF2 E1               191    ; POP  HL
                        192    ; Jumps back to checks before loop code
077FF3 18CC             193    ; JR -#49 
------
                        194    ; Zero 'graphics call'
                        195    ; Slightly changed original code (storing and recovering DE)
077FF5 E5               196    ; PUSH HL
077FF6 D5               197    ; PUSH DE
077FF7 C5               198    ; PUSH BC
077FF8 CD3A51           199    ; CALL $513A
077FFB C1               200    ; POP BC
077FFC D1               201    ; POP DE
077FFD E1               202    ; POP HL
077FFE 18D8             203    ; JR -#33
======
                        204    ; ROM 28: contains another routine involved with X weapons
                        205    ; Redirect to free space
0A3B27 C30F7F           206    ; JP $7F0F
0A3B2A 00               207    ; NOP
------
                        208    ; Routine to check for both weapon flags, similar to earlier ones
                        209    ; Specifically placed in free space to be compatible with another patch
0A3F0F CB76             210    ; BIT 6, (HL)
0A3F11 C2337B           211    ; JP NZ, $7B33
0A3F14 FE02             212    ; CP 0x02
0A3F16 DA2B7B           213    ; JP C, $7B2B
0A3F19 D602             214    ; SUB 0x02
0A3F1B 3C               215    ; INC A
0A3F1C 0601             216    ; LD B, 0x01
0A3F1E 3D               217    ; DEC A
0A3F1F 2804             218    ; JR Z, +#4
0A3F21 CB20             219    ; SLA B
0A3F23 18F9             220    ; JR -#7
0A3F25 FAA0C0           221    ; LD A, ($C0A0)
0A3F28 A0               222    ; AND B
0A3F29 79               223    ; LD A, C
0A3F2A C2337B           224    ; JP NZ, $7B33
0A3F2D C32B7B           225    ; JP $7B2B
